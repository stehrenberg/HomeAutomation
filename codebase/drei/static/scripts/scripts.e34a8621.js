"use strict";angular.module("DreiWebApp",["ngResource","ngRoute","ngDialog"]).constant("AppConfig",{serverAddress:""}).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/dashboard.html",controller:"DashboardCtrl"}).when("/users",{templateUrl:"views/users.html",controller:"UsersCtrl"}).otherwise({redirectTo:"/"})}]),angular.module("DreiWebApp").controller("DashboardCtrl",["$scope","WebsocketService",function(a,b){a.$on("ActiveUsersNotification",function(b,c){a.activeUsers=c,a.lastUpdated=Date.now(),a.$digest()}),b.refreshActiveUsers()}]),angular.module("DreiWebApp").controller("UsersCtrl",["$scope","DataService","ngDialog",function(a,b,c){function d(){b.getUsers().then(function(b){a.users=b})}a.deleteUser=function(a){b.deleteUser(a).then(function(a){a?(d(),console.log("User removed")):console.log("ERROR: couldn't delete user")})},a.createUser=function(){var b=a.$new(!0);c.open({template:"views/dialogs/user.html",controller:"CreateUserCtrl",scope:b,preCloseCallback:function(a){a&&d()}})},a.updateUser=function(b){var e=a.$new(!0);e.user=angular.copy(b),c.open({template:"views/dialogs/user.html",controller:"UpdateUserCtrl",scope:e,preCloseCallback:function(a){a&&d()}})},d()}]),angular.module("DreiWebApp").controller("CreateUserCtrl",["$scope","DataService",function(a,b){a.updating=!1,a.user={},b.getSounds().then(function(b){a.sounds=b,a.user.sound=b[0]}),a.cancel=function(){a.closeThisDialog(!1)},a.save=function(){if(a.userForm.$valid){var c=a.user;b.createUser(c).then(function(b){var c=b.created;a.closeThisDialog(c)})}}}]),angular.module("DreiWebApp").controller("ErrorCtrl",["$scope",function(a){a.close=function(){a.closeThisDialog(!1)}}]),angular.module("DreiWebApp").controller("UpdateUserCtrl",["$scope","DataService",function(a,b){a.updating=!0,b.getSounds().then(function(b){a.sounds=b}),a.cancel=function(){a.closeThisDialog(!1)},a.save=function(){if(a.userForm.$valid){var c=a.user;b.updateUser(c).then(function(b){var c=b.updated;a.closeThisDialog(c)})}}}]),function(){angular.module("DreiWebApp").factory("$exceptionHandler",["$injector",function(a){return function(b){var c=a.get("$rootScope"),d=a.get("ngDialog"),e=c.$new(!0);void 0!==b.isCustomError&&b.isCustomError===!0?(e.errorHeader=b.error,e.errorMessage=b.errorMessage):(e.errorHeader="Fehler: "+b.message,e.errorMessage=b.stack),d.open({template:"views/dialogs/error.html",controller:"ErrorCtrl",scope:e})}}])}(),angular.module("DreiWebApp").directive("isActiveNav",["$location",function(a){return{restrict:"A",link:function(b,c){b.location=a,b.$watch("location.path()",function(a){"/#"+a===c[0].attributes.href.nodeValue?c.parent().addClass("active"):c.parent().removeClass("active")})}}}]),function(){angular.module("DreiWebApp").service("DataService",["$resource","AppConfig",function(a,b){function c(a,b){return this.error=a,this.errorMessage=b,this.isCustomError=!0,this}function d(a,b){var d="Fehler: "+a.statusText+" ("+a.status+")";return new c(d,b)}return{getUsers:function(){return a(b.serverAddress+"/api/users",{},{}).query().$promise.then(function(a){var b=[];return a.forEach(function(a){b.push({mac:a.mac,name:a.name,sound:a.sound,light_color:a.light_color})}),b})["catch"](function(a){var b="Konnte Nutzer nicht empfangen. Ist der Server verfügbar!?";throw d(a,b)})},createUser:function(c){return a(b.serverAddress+"/api/users",{},{post:{method:"POST"}}).post(c).$promise["catch"](function(a){var b="Konnte Nutzer nicht anlegen. Existiert diese Mac-Adresse bereits!?";throw d(a,b)})},deleteUser:function(c){return a(b.serverAddress+"/api/users/"+escape(c.mac),{},{})["delete"]().$promise["catch"](function(){var a="Konnte Nutzer nicht löschen. Existiert ein User mit dieser Mac-Adresse!?";throw d(error,a)})},updateUser:function(c){return a(b.serverAddress+"/api/users/"+escape(c.mac),{},{put:{method:"PUT"}}).put(c).$promise["catch"](function(){var a="Konnte Nutzer nicht bearbeiten. Existiert ein User mit dieser Mac-Adresse!?";throw d(error,a)})},getSounds:function(){return a(b.serverAddress+"/api/sounds",{},{}).query().$promise["catch"](function(){var a="Konnte Songs nicht empfangen. Ist der Server verfügbar!?";throw d(error,a)})}}}])}(),function(){angular.module("DreiWebApp").service("WebsocketService",["$rootScope","AppConfig",function(a,b){function c(b){a.$broadcast("ActiveUsersNotification",JSON.parse(b))}function d(){e=io.connect(b.serverAddress),e.on("ActiveUsersNotification",c),e.on("connect",function(){e.emit("Connected")})}var e;return d(),{refreshActiveUsers:function(){e.emit("GetActiveUsersEvent")}}}])}();